/**
    THIS IS GENERATED CODE AND SHOULD NOT BE CHANGED MANUALLY!!!

    Generated by: silvera
    Date: 2022-05-07 18:49:21
*/

package com.silvera.SciPaper.controller;

import java.util.Collection;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import com.silvera.SciPaper.service.base.*;
import com.silvera.SciPaper.domain.model.*;
import com.silvera.SciPaper.messages.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.core.KafkaTemplate;
import javax.validation.Valid;


@RefreshScope
@RestController
public class SciPaperController {

    @Autowired
    ISciPaperService sciPaperService;

    // Auto-generated CRUD methods
    
    
    
    @RequestMapping(value="/scipaper", method=RequestMethod.POST)
    @ResponseBody
    public SciPaper createSciPaper(@Valid @RequestBody SciPaper scipaper){
        return sciPaperService.createSciPaper(scipaper);
    }
    
    
    @RequestMapping(value="/scipaper/{id}", method=RequestMethod.PUT)
    @ResponseBody
    public SciPaper updateSciPaper(@PathVariable java.lang.String id, @Valid @RequestBody SciPaper scipaper){
        return sciPaperService.updateSciPaper(id, scipaper);
    }
    
    
    @RequestMapping(value="/scipaper/{id}", method=RequestMethod.GET)
    @ResponseBody
    public SciPaper readSciPaper(@PathVariable java.lang.String id){
        return sciPaperService.readSciPaper(id);
    }
    
    
    @RequestMapping(value="/scipaper/{id}", method=RequestMethod.DELETE)
    @ResponseBody
    public void deleteSciPaper(@PathVariable java.lang.String id){
        sciPaperService.deleteSciPaper(id);
    }
    
    
    
    
    @RequestMapping(value="/section", method=RequestMethod.POST)
    @ResponseBody
    public Section createSection(@Valid @RequestBody Section section){
        return sciPaperService.createSection(section);
    }
    
    
    @RequestMapping(value="/section/{id}", method=RequestMethod.PUT)
    @ResponseBody
    public Section updateSection(@PathVariable java.lang.String id, @Valid @RequestBody Section section){
        return sciPaperService.updateSection(id, section);
    }
    
    
    @RequestMapping(value="/section/{id}", method=RequestMethod.GET)
    @ResponseBody
    public Section readSection(@PathVariable java.lang.String id){
        return sciPaperService.readSection(id);
    }
    
    
    @RequestMapping(value="/section/{id}", method=RequestMethod.DELETE)
    @ResponseBody
    public void deleteSection(@PathVariable java.lang.String id){
        sciPaperService.deleteSection(id);
    }
    
    

    //
    // Public functions
    //
    
    

    @PostMapping(value = "/{username}")


    public SciPaper uploadSciPaper(@PathVariable java.lang.String username, @RequestBody UploadPaperDto dto){
        
        return sciPaperService.uploadSciPaper(username, dto);

    }
    
    

    @GetMapping(value="/")


    public java.util.List<SciPaper> getAll(){
        
        return sciPaperService.getAll();

    }
    
    

    @GetMapping(value="/{id}")


    public SciPaper getOne(@PathVariable java.lang.String id){
        
        return sciPaperService.getOne(id);

    }
    
    

    @GetMapping(value="publishpaper/{sciPaper}")


    public void publishPaper(@PathVariable SciPaper sciPaper){
        
         sciPaperService.publishPaper(sciPaper);

    }
    

    //
    // Message consumers
    //
    
}