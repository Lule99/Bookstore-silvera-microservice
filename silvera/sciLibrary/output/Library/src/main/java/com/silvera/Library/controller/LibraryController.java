/**
    THIS IS GENERATED CODE AND SHOULD NOT BE CHANGED MANUALLY!!!

    Generated by: silvera
    Date: 2022-05-07 18:49:21
*/

package com.silvera.Library.controller;

import java.util.Collection;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import com.silvera.Library.service.base.*;
import com.silvera.Library.domain.model.*;
import com.silvera.Library.messages.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.core.KafkaTemplate;
import javax.validation.Valid;


@RefreshScope
@RestController
public class LibraryController {

    @Autowired
    ILibraryService libraryService;

    // Auto-generated CRUD methods
    
    
    
    @RequestMapping(value="/libraryentry", method=RequestMethod.POST)
    @ResponseBody
    public LibraryEntry createLibraryEntry(@Valid @RequestBody LibraryEntry libraryentry){
        return libraryService.createLibraryEntry(libraryentry);
    }
    
    
    @RequestMapping(value="/libraryentry/{id}", method=RequestMethod.PUT)
    @ResponseBody
    public LibraryEntry updateLibraryEntry(@PathVariable java.lang.String id, @Valid @RequestBody LibraryEntry libraryentry){
        return libraryService.updateLibraryEntry(id, libraryentry);
    }
    
    
    @RequestMapping(value="/libraryentry/{id}", method=RequestMethod.GET)
    @ResponseBody
    public LibraryEntry readLibraryEntry(@PathVariable java.lang.String id){
        return libraryService.readLibraryEntry(id);
    }
    
    
    @RequestMapping(value="/libraryentry/{id}", method=RequestMethod.DELETE)
    @ResponseBody
    public void deleteLibraryEntry(@PathVariable java.lang.String id){
        libraryService.deleteLibraryEntry(id);
    }
    
    

    //
    // Public functions
    //
    
    

    @GetMapping(value="/")


    public java.util.List<LibraryEntry> getAll(){
        
        return libraryService.getAll();

    }
    

    //
    // Message consumers
    //
    
    
    @KafkaListener(
        topics = { "PAPER_PUBLISHED_CHANNEL" },
        groupId = "Library",
        containerFactory = "papermsggroupPaperPublishedKafkaListenerContainerFactory"
    )
    public void sciPaperCreated(com.silvera.Library.messages.papermsggroup.PaperPublished message){
        libraryService.sciPaperCreated(message);
    }
    
    
}