/**
 * Use this file to implement business logic. This file will be preserved
 * during next compilations.
 * <p>
 * Generated by: silvera
 * Date: 2022-05-07 18:49:21
 */

package com.silvera.Library.service.impl;

import com.silvera.Library.domain.model.LibraryEntry;
import com.silvera.Library.repository.LibraryEntryRepository;
import com.silvera.Library.service.base.ILibraryService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Optional;


@Service
public class LibraryService implements ILibraryService {


    @Autowired
    LibraryEntryRepository libraryentryRepository;


    @Override
    public LibraryEntry createLibraryEntry(LibraryEntry libraryentry) {
        libraryentryRepository.save(libraryentry);


        Optional<LibraryEntry> opt = libraryentryRepository.findById(libraryentry.getId());
        return opt.orElse(null);
    }


    @Override
    public LibraryEntry updateLibraryEntry(java.lang.String id, LibraryEntry libraryentryUpdate) {
        Optional<LibraryEntry> opt = libraryentryRepository.findById(id);
        LibraryEntry entity = opt.orElseThrow(IllegalArgumentException::new);
        libraryentryRepository.save(libraryentryUpdate);


        return libraryentryUpdate;
    }


    @Override
    public LibraryEntry readLibraryEntry(java.lang.String id) {
        Optional<LibraryEntry> opt = libraryentryRepository.findById(id);
        return opt.orElseThrow(IllegalArgumentException::new);
    }


    @Override
    public void deleteLibraryEntry(java.lang.String id) {
        Optional<LibraryEntry> opt = libraryentryRepository.findById(id);
        LibraryEntry entity = opt.orElseThrow(IllegalArgumentException::new);
        libraryentryRepository.delete(entity);


    }


    @Override
    public java.util.List<LibraryEntry> getAll() {
        return libraryentryRepository.findAll();
    }


    @Override
    public void sciPaperCreated(com.silvera.Library.messages.papermsggroup.PaperPublished message) {

        LibraryEntry entry = new LibraryEntry();
        entry.setAuthor(message.getAuthor());
        entry.setTitle(message.getTitle());
        entry.setPaperId(message.getPaperId());
        libraryentryRepository.save(entry);
    }


}